#!/usr/bin/env python3
"""
Script para inicializar la base de datos del sistema de inventario
"""

import sqlite3
import os

PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
DB_PATH = os.path.join(PROJECT_ROOT, 'inventario.db')

def crear_tabla():
    """Crea la tabla productos seg√∫n los requisitos especificados"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS productos (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nombre TEXT NOT NULL,
            descripcion TEXT,
            cantidad INTEGER NOT NULL,
            precio REAL NOT NULL,
            categoria TEXT
        )
    ''')
    
    conn.commit()
    conn.close()
    print("‚úÖ Tabla productos creada correctamente!")

def insertar_datos_ejemplo():
    """Inserta datos de ejemplo en la base de datos"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute('SELECT COUNT(*) FROM productos')
    if cursor.fetchone()[0] > 0:
        print("‚ÑπÔ∏è  La base de datos ya contiene productos. No se insertar√°n datos duplicados.")
        conn.close()
        return
    
    productos_ejemplo = [
        ("Sof√° de 3 plazas", "Sof√° moderno y c√≥modo con tela resistente", 15, 899.99, "Hogar"),
        ("Mesa de comedor", "Mesa de madera maciza para 6 personas", 8, 450.00, "Hogar"),
        ("Silla de escritorio", "Silla ergon√≥mica de oficina con respaldo ajustable", 25, 199.99, "Oficina"),
        ("Cama matrimonial", "Cama de 1.60 x 2.00 metros con cabecero", 12, 650.00, "Hogar"),
        ("Estanter√≠a", "Estanter√≠a de 5 niveles en madera natural", 20, 180.00, "Hogar"),
        
        ("Maceta grande", "Maceta de cer√°mica 30cm con drenaje", 30, 45.99, "Jard√≠n"),
        ("Tierra abonada", "Saco de tierra 20kg con nutrientes", 50, 25.50, "Jard√≠n"),
        ("Regadera", "Regadera pl√°stica 2L con boquilla ajustable", 40, 18.99, "Jard√≠n"),
        ("Pala de jard√≠n", "Pala met√°lica resistente con mango ergon√≥mico", 15, 35.00, "Jard√≠n"),
        ("Semillas de tomate", "Paquete con 100 semillas org√°nicas", 100, 8.99, "Jard√≠n"),
        
        ("Laptop HP", "Laptop 15 pulgadas, 8GB RAM, SSD 256GB", 10, 1299.99, "Tecnolog√≠a"),
        ("Monitor 24\"", "Monitor LED Full HD con panel IPS", 18, 299.99, "Tecnolog√≠a"),
        ("Teclado inal√°mbrico", "Teclado ergon√≥mico con teclas mec√°nicas", 35, 89.99, "Tecnolog√≠a"),
        ("Mouse √≥ptico", "Mouse inal√°mbrico con sensor de alta precisi√≥n", 45, 29.99, "Tecnolog√≠a"),
        ("Impresora", "Impresora multifunci√≥n WiFi con esc√°ner", 8, 399.99, "Tecnolog√≠a"),
        
        ("Pelota de f√∫tbol", "Pelota oficial tama√±o 5 con v√°lvula de calidad", 22, 75.50, "Deportes"),
        ("Raqueta de tenis", "Raqueta profesional con encordado premium", 14, 185.00, "Deportes"),
        ("Botella deportiva", "Botella de acero inoxidable 750ml", 60, 32.99, "Deportes"),
        ("Cinta de correr", "Cinta plegable con motor de 2.5HP", 3, 899.99, "Deportes"),
        ("Pesas ajustables", "Set de pesas de 2.5kg a 25kg", 8, 450.00, "Deportes"),
        
        ("Sart√©n antiadherente", "Sart√©n de 28cm con revestimiento cer√°mico", 18, 65.99, "Cocina"),
        ("Batidora el√©ctrica", "Batidora de mano con 5 velocidades", 12, 89.99, "Cocina"),
        ("Juego de cuchillos", "Set de 6 cuchillos profesionales", 25, 120.00, "Cocina"),
        ("Olla a presi√≥n", "Olla de 6L con v√°lvula de seguridad", 9, 145.50, "Cocina"),
        ("Cafetera autom√°tica", "Cafetera programable con molinillo", 6, 299.99, "Cocina"),
        
        ("Camiseta b√°sica", "Camiseta 100% algod√≥n en varios colores", 80, 24.99, "Ropa"),
        ("Jeans cl√°sicos", "Jeans de mezclilla con 5 bolsillos", 45, 89.99, "Ropa"),
        ("Zapatillas deportivas", "Zapatillas con suela de goma y plantilla", 30, 125.00, "Ropa")
    ]
    
    for producto in productos_ejemplo:
        cursor.execute('''
            INSERT INTO productos (nombre, descripcion, cantidad, precio, categoria)
            VALUES (?, ?, ?, ?, ?)
        ''', producto)
    
    conn.commit()
    conn.close()
    print("‚úÖ Datos de ejemplo insertados correctamente!")

def verificar_datos():
    """Verifica que los datos se hayan insertado correctamente"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute('SELECT COUNT(*) FROM productos')
    total = cursor.fetchone()[0]
    
    cursor.execute('SELECT * FROM productos LIMIT 3')
    productos = cursor.fetchall()
    
    conn.close()
    
    print(f"üìä Total de productos en la base de datos: {total}")
    print("üìã Primeros 3 productos:")
    for producto in productos:
        print(f"   - {producto[1]} (${producto[4]}) - Stock: {producto[3]}")

if __name__ == "__main__":
    print("üöÄ Inicializando base de datos del Sistema de Inventario...")
    print(f"üìÅ Ruta de la base de datos: {DB_PATH}")
    
    crear_tabla()
    insertar_datos_ejemplo()
    verificar_datos()
    
    print("\n‚úÖ Base de datos inicializada correctamente!")
    print("üåê Ahora puedes ejecutar la API con: python3 api.py")
